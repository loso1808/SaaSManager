var settings = {
  minConn: 1,
  maxConn: 10,
  incrConn: 1,
  timeout: 10,
  host: '166.78.158.45',
  database: 'XE',
  user: 'test',
  password: 'str0ng100pjs'
};

var ora = require('../lib/oracle');
if (typeof ora === 'function') {
  ora = ora(settings);
}

function generateClob(char, len) {
  var results = [char, '|', len, ':'];
  for (var i = 0; i < len; i++) {
    results.push(char);
  }
  return results.join('');
}

var sql = 'UPDATE CLOB_TEST SET NOTE=:1 WHERE id=:2';

ora.createConnectionPool(settings, function(err, pool) {
  if (err) {
    console.error(err);
    return;
  }

  var notes = [
    generateClob('1', 1000),
    generateClob('2', 20000),
    generateClob('3', 40000),
    generateClob('4', 10000),
    generateClob('5', 5000)
  ];

  var count = 20;

  function runUpdate(i) {
    return function(err, conn) {
      console.log('start %d', i);
      var note = notes[i % 5];
      conn.execute(sql, [note, Math.floor(Math.random() * 100) % 10 + 101], function(err, results) {
        console.log('done %d', i);
        count--;
        if (err) {
          console.log(err);
        }
        if (!err && results) {
          console.log('Result: %j', results);
        }
        conn.close(function(err, result) {
          if (err) {
            console.log(err, result);
          }
          // console.log(pool.getInfo());
          if (count === 0) {
            pool.close();
          }
        });
      });
    };
  }

  for (var i = 0; i < count; i++) {
    // console.log(pool.getInfo());
    pool.getConnection(runUpdate(i));
  }
});
